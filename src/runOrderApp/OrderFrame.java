
package runOrderApp;

import persistence.MyTableModel;
import persistence.myBigObject;
import order.OrderDetails;
import info.ShippingInfo;
import info.BillingInfo;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * 
 * @author shree665
 */
public class OrderFrame extends javax.swing.JFrame {
    
    
  
    MyTableModel model = new MyTableModel();
    private JFrame frame;
    int count = 0;
    public Object [] obj = new Object [10];
    Boolean isEdit = false;
     


    /** Creates new form OrderFrame */
    public OrderFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        fNameShip = new javax.swing.JTextField();
        lNameShip = new javax.swing.JTextField();
        addressShip = new javax.swing.JTextField();
        cityShip = new javax.swing.JTextField();
        stateShip = new javax.swing.JComboBox();
        zipShip = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        fNameBill = new javax.swing.JTextField();
        lNameBill = new javax.swing.JTextField();
        addressBill = new javax.swing.JTextField();
        cityBill = new javax.swing.JTextField();
        stateBill = new javax.swing.JComboBox();
        zipBill = new javax.swing.JTextField();
        shipping = new javax.swing.JCheckBox();
        newButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel20 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        price1 = new javax.swing.JTextField();
        quantity1 = new javax.swing.JTextField();
        total1 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        payPal1 = new javax.swing.JRadioButton();
        debit1 = new javax.swing.JRadioButton();
        credit1 = new javax.swing.JRadioButton();
        jLabel35 = new javax.swing.JLabel();
        creditNum1 = new javax.swing.JPasswordField();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        comments1 = new javax.swing.JTextArea();
        jLabel37 = new javax.swing.JLabel();
        creditNum2 = new javax.swing.JPasswordField();
        item = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDesktopPane1.setLayout(null);

        jLabel1.setText("Shipping Address");

        jLabel4.setText("First Name");

        jLabel5.setText("Last Name");

        jLabel6.setText("Address");

        jLabel9.setText("City");

        jLabel10.setText("State");

        jLabel11.setText("Zip");

        stateShip.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(79, 79, 79))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(67, 67, 67)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(74, 74, 74)))
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(95, 95, 95))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(zipShip, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stateShip, javax.swing.GroupLayout.Alignment.LEADING, 0, 147, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cityShip, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(addressShip, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lNameShip, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fNameShip, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(fNameShip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lNameShip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(addressShip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cityShip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(stateShip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(zipShip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        jDesktopPane1.add(jPanel1);
        jPanel1.setBounds(20, 10, 270, 330);

        jLabel3.setText("Billing Address");

        jLabel7.setText("First Name");

        jLabel8.setText("Last Name");

        jLabel12.setText("Address");

        jLabel13.setText("City");

        jLabel14.setText("State");

        jLabel15.setText("Zip");

        stateBill.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY" }));

        shipping.setText("Same as Shipping");
        shipping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sameAsShipping(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addGap(80, 80, 80))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addGap(75, 75, 75)))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel12)
                                            .addGap(55, 55, 55)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(44, 44, 44)))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(43, 43, 43)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(68, 68, 68)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stateBill, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fNameBill)
                            .addComponent(lNameBill)
                            .addComponent(addressBill)
                            .addComponent(cityBill)
                            .addComponent(zipBill)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(78, 78, 78))))
                    .addComponent(shipping))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(fNameBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lNameBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(addressBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cityBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(stateBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(zipBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(shipping)
                .addGap(37, 37, 37))
        );

        jDesktopPane1.add(jPanel3);
        jPanel3.setBounds(580, 10, 280, 330);

        newButton.setText("New");
        newButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newOrder(evt);
            }
        });
        jDesktopPane1.add(newButton);
        newButton.setBounds(70, 380, 120, 18);

        editButton.setText("Edit");
        editButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTable(evt);
            }
        });
        jDesktopPane1.add(editButton);
        editButton.setBounds(270, 380, 120, 18);

        submitButton.setText("Submit");
        submitButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtom(evt);
            }
        });
        jDesktopPane1.add(submitButton);
        submitButton.setBounds(470, 380, 120, 18);

        cancelButton.setText("Cancel");
        cancelButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelChanges(evt);
            }
        });
        jDesktopPane1.add(cancelButton);
        cancelButton.setBounds(680, 380, 110, 18);

        jTable1.setModel(new MyTableModel());
        jScrollPane1.setViewportView(jTable1);

        jDesktopPane1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 430, 800, 180);

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("Order Details");
        jLabel29.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel31.setText("Price");

        jLabel32.setText("Quantity");

        jLabel33.setText("Total");

        price1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                price1ActionPerformed(evt);
            }
        });

        total1.setEditable(false);
        total1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                total1totalFocusGained(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel34.setText("Select Preferred Method of Payment:");

        buttonGroup1.add(payPal1);
        payPal1.setText("PayPal");

        buttonGroup1.add(debit1);
        debit1.setText("Debit");

        buttonGroup1.add(credit1);
        credit1.setText("Credit");

        jLabel35.setText("Card or Account Number:");

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Additional Comments");

        comments1.setColumns(20);
        comments1.setRows(5);
        jScrollPane4.setViewportView(comments1);

        jLabel37.setText("Card or Account Number:");

        item.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Computer Science 101", "History 101", "Geography 101", "English 101", "Biology 101", "Algebra 101", "Calculus 101" }));
        item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                setPrice(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Products");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addComponent(payPal1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(debit1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(credit1))))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(creditNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel32)
                                    .addComponent(jLabel33)
                                    .addComponent(jLabel31))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel20Layout.createSequentialGroup()
                                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(price1)
                                            .addComponent(quantity1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel20Layout.createSequentialGroup()
                                                .addGap(53, 53, 53)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel20Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(total1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(creditNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jLabel29)
                .addGap(15, 15, 15)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(price1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(quantity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(total1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payPal1)
                    .addComponent(debit1)
                    .addComponent(credit1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(creditNum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(281, 281, 281)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(creditNum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDesktopPane1.add(jPanel20);
        jPanel20.setBounds(300, 10, 270, 330);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 863, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void price1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_price1ActionPerformed

    }//GEN-LAST:event_price1ActionPerformed

    private void total1totalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_total1totalFocusGained
 //Automatically update total when user changes quantity!         double totalPrice = Float.parseFloat(quantity1.getText()) * Float.parseFloat(price1.getText());          NumberFormat n = NumberFormat.getCurrencyInstance(Locale.US);          String s = n.format(totalPrice);          total1.setText("" + s);     }                                       
        double totalPrice = Float.parseFloat(quantity1.getText()) * Float.parseFloat(price1.getText());
        NumberFormat n = NumberFormat.getCurrencyInstance(Locale.US);
        String s = n.format(totalPrice);
        total1.setText("" + s);
    }//GEN-LAST:event_total1totalFocusGained

    private void submitButtom(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtom
          
        
        if(isEdit){
               
               MyTableModel model = (MyTableModel) jTable1.getModel();
               int row = jTable1.getSelectedRow();
               myBigObject info = new myBigObject();
               ShippingInfo ship = new ShippingInfo();
               BillingInfo bill = new BillingInfo();
               OrderDetails order = new OrderDetails();
               info = (myBigObject) obj[row];
               ship = (ShippingInfo) info.getShipping();
               bill = (BillingInfo) info.getBilling();
               order = (OrderDetails) info.getOrderInfo();
               
                      //Validate the zip fields
                String zip = zipShip.getText();
            for (int i = 0; i < zip.length(); i++) {
           //If we find a non-digit character we return false.
            if (!Character.isDigit(zip.charAt(i))){
         JOptionPane.showMessageDialog(null,"Zip can only contain numbers","Error Message",JOptionPane.PLAIN_MESSAGE);
                return;
            }
         }
                    //Validate the zip fields
                String zip1 = zipBill.getText();
            for (int i = 0; i < zip1.length(); i++) {
           //If we find a non-digit character we return false.
            if (!Character.isDigit(zip1.charAt(i))){
         JOptionPane.showMessageDialog(null,"Zip can only contain numbers","Error Message",JOptionPane.PLAIN_MESSAGE);
                return;
            }
         }
            
                         //Validate the quantity fields
                String qt = quantity1.getText();
                      for (int i = 0; i < qt.length(); i++) {
           //If we find a non-digit character we return false.
            if (!Character.isDigit(qt.charAt(i))){
         JOptionPane.showMessageDialog(null,"Quantity can only contain numbers","Error Message",JOptionPane.PLAIN_MESSAGE);
                return;
            }
                      }
                int qty1 = Integer.parseInt(qt);
        
            if (qty1 > 5){
         JOptionPane.showMessageDialog(null,"Quantity Cannot be larger than 5","Error Message",JOptionPane.PLAIN_MESSAGE);
                return;
            }
         
               
         //Set Data for the table
            String fname = fNameShip.getText();
            String lname = lNameShip.getText();
            String address = addressBill.getText();
            Object itemOrdered = item.getSelectedItem();
            String itemOrder = itemOrdered.toString();
            String qty = quantity1.getText();
                   
            //Set the shipping details
                ship.setfNameShip(fNameShip.getText());
                ship.setlNameShip(lNameShip.getText());
                ship.setAddressShip(addressShip.getText());
                ship.setCityShip(cityShip.getText());
                ship.setStateShip(stateShip.getSelectedItem());
                ship.setZipShip(zipShip.getText());
      
            //Set the billing details
                bill.setfNameBill(fNameBill.getText());
                bill.setlNameBill(lNameBill.getText());
                bill.setAddressBill(addressBill.getText());
                bill.setCityBill(cityBill.getText());
                bill.setStateBill(stateBill.getSelectedItem());
                bill.setZipBill(zipBill.getText());
            //Set the order details
                order.setItem(item.getSelectedItem());
                order.setQuantiy(quantity1.getText());
                order.setTotal(total1.getText());
                order.setPrice(price1.getText());
                order.setCredit(credit1.isSelected());
                order.setDebit(debit1.isSelected());
                order.setPayPal(payPal1.isSelected());
                order.setCreditNum(creditNum2.getPassword());
            
                shipping.setSelected(false);
                info.setShipping(ship);
                info.setBilling(bill);
                info.setOrderInfo(order);
                obj[row] = info;
               model.editData(evt, row,fname, lname, address, itemOrder, qty); 
            isEdit = false;
            
              //After the user selects submit, we clear all fields
                fNameBill.setText(null);
                lNameBill.setText(null);
                addressBill.setText(null);
                cityBill.setText(null);
                stateBill.setSelectedItem("AL");
                zipBill.setText(null);

                fNameShip.setText(null);
                lNameShip.setText(null);
                addressShip.setText(null);
                cityShip.setText(null);
                stateShip.setSelectedItem("AL");
                zipShip.setText(null);

                creditNum2.setText(null);
               

                item.setSelectedItem("Computer Science 101");
                quantity1.setText(null);
                total1.setText(null);
                price1.setText(null);
                buttonGroup1.clearSelection();
                
                 JOptionPane.showMessageDialog(null,"Your Order has successfully been edited","Confirmation Message",JOptionPane.PLAIN_MESSAGE);
        }
        else {
        
        BillingInfo bill = new BillingInfo();
        ShippingInfo ship = new ShippingInfo();
        OrderDetails order = new OrderDetails(); 
        myBigObject bigObj = new myBigObject();
        
            //Validate the zip fields
                String zip = zipShip.getText();
            for (int i = 0; i < zip.length(); i++) {
           //If we find a non-digit character we return false.
            if (!Character.isDigit(zip.charAt(i))){
         JOptionPane.showMessageDialog(null,"Zip can only contain numbers","Error Message",JOptionPane.PLAIN_MESSAGE);
                return;
            }
         }
                    //Validate the zip fields
                String zip1 = zipBill.getText();
            for (int i = 0; i < zip1.length(); i++) {
           //If we find a non-digit character we return false.
            if (!Character.isDigit(zip1.charAt(i))){
         JOptionPane.showMessageDialog(null,"Zip can only contain numbers","Error Message",JOptionPane.PLAIN_MESSAGE);
                return;
            }
         }
                          //Validate the quantity fields
                String qt = quantity1.getText();
               for (int i = 0; i < qt.length(); i++) {
           //If we find a non-digit character we return false.
            if (!Character.isDigit(qt.charAt(i))){
         JOptionPane.showMessageDialog(null,"Quantity can only contain numbers","Error Message",JOptionPane.PLAIN_MESSAGE);
                return;
            }
         }
                int qty1 = Integer.parseInt(qt);
        
            if (qty1 > 5){
         JOptionPane.showMessageDialog(null,"Quantity Cannot be larger than 5","Error Message",JOptionPane.PLAIN_MESSAGE);
                return;
            }
            
    
        //Set Data for the table
            String fname = fNameShip.getText();
            String lname = lNameShip.getText();
            String address = addressBill.getText();
            Object itemOrdered = item.getSelectedItem();
            String itemOrder = itemOrdered.toString();
            String qty = quantity1.getText();
                   
            //Set the shipping details
                ship.setfNameShip(fNameShip.getText());
                ship.setlNameShip(lNameShip.getText());
                ship.setAddressShip(addressShip.getText());
                ship.setCityShip(cityShip.getText());
                ship.setStateShip(stateShip.getSelectedItem());
                ship.setZipShip(zipShip.getText());
      
            //Set the billing details
                bill.setfNameBill(fNameBill.getText());
                bill.setlNameBill(lNameBill.getText());
                bill.setAddressBill(addressBill.getText());
                bill.setCityBill(cityBill.getText());
                bill.setStateBill(stateBill.getSelectedItem());
                bill.setZipBill(zipBill.getText());
            //Set the order details
                order.setItem(item.getSelectedItem());
                order.setQuantiy(quantity1.getText());
                order.setTotal(total1.getText());
                order.setPrice(price1.getText());
                order.setCredit(credit1.isSelected());
                order.setDebit(debit1.isSelected());
                order.setPayPal(payPal1.isSelected());
                order.setCreditNum(creditNum2.getPassword());
                
            
               
                
                MyTableModel model = (MyTableModel) jTable1.getModel();
                
                model.addData(evt, fname, lname, address, itemOrder, qty);
                shipping.setSelected(false);
                bigObj.setShipping(ship);
                bigObj.setBilling(bill);
                bigObj.setOrderInfo(order);
                obj[count] = bigObj;
                count++;
        
                isEdit = false;
                
                  //After the user selects submit, we clear all fields
                fNameBill.setText(null);
                lNameBill.setText(null);
                addressBill.setText(null);
                cityBill.setText(null);
                stateBill.setSelectedItem("AL");
                zipBill.setText(null);

                fNameShip.setText(null);
                lNameShip.setText(null);
                addressShip.setText(null);
                cityShip.setText(null);
                stateShip.setSelectedItem("AL");
                zipShip.setText(null);

                creditNum2.setText(null);
               

                item.setSelectedItem("Computer Science 101");
                quantity1.setText(null);
                total1.setText(null);
                price1.setText(null);

                 buttonGroup1.clearSelection();
         JOptionPane.showMessageDialog(null,"Your Order has successfully been placed","Confirmation Message",JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_submitButtom

    private void setPrice(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setPrice
                 
          price1.setText("50");        
    
      
                                     
    }//GEN-LAST:event_setPrice

    private void sameAsShipping(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sameAsShipping
        //Check to see if checkbox was checked or unchecked              
        Boolean state = shipping.isSelected();
        if (!state) { //Box is unchecked so depopulate billing fields              
            fNameBill.setText(null);
            lNameBill.setText(null);
            addressBill.setText(null);
            cityBill.setText(null);
            stateBill.setSelectedItem("AL");
            zipBill.setText(null);
            lNameBill.setText(null);
        } else {
            //Box is selected so populate Billing             
            //Set all the billing fields to equal the shipping fields            
            fNameBill.setText(fNameShip.getText());
            addressBill.setText(addressShip.getText());
            cityBill.setText(cityShip.getText());
            stateBill.setSelectedItem(stateShip.getSelectedItem());
            zipBill.setText(zipShip.getText());
            lNameBill.setText(lNameShip.getText());
        }
    
    }//GEN-LAST:event_sameAsShipping

    private void newOrder(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newOrder
          //After the user selects submit, we clear all fields
                fNameBill.setText(null);
                lNameBill.setText(null);
                addressBill.setText(null);
                cityBill.setText(null);
                stateBill.setSelectedItem("AL");
                zipBill.setText(null);

                fNameShip.setText(null);
                lNameShip.setText(null);
                addressShip.setText(null);
                cityShip.setText(null);
                stateShip.setSelectedItem("AL");
                zipShip.setText(null);

                creditNum2.setText(null);
               

                item.setSelectedItem("Computer Science 101");
                quantity1.setText(null);
                total1.setText(null);
                price1.setText(null);

       


                buttonGroup1.clearSelection();
    }//GEN-LAST:event_newOrder

    private void editTable(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTable
        
        MyTableModel model = (MyTableModel) jTable1.getModel();
        
           
         int row = jTable1.getSelectedRow();
         
            if (row == -1){
         JOptionPane.showMessageDialog(null,"You must select at least 1 row","Error Message",JOptionPane.PLAIN_MESSAGE);
                return;
            }
        
            int rows = jTable1.getSelectedRowCount();
            
                  if (rows > 1){
         JOptionPane.showMessageDialog(null,"You can only select 1 row at a time","Error Message",JOptionPane.PLAIN_MESSAGE);
                return;
            }
         
         myBigObject info = new myBigObject();
         ShippingInfo ship = new ShippingInfo();
         BillingInfo bill = new BillingInfo();
         OrderDetails order = new OrderDetails();
               info = (myBigObject) obj[row];
               ship = (ShippingInfo) info.getShipping();
               bill = (BillingInfo) info.getBilling();
               order = (OrderDetails) info.getOrderInfo();
                  
         
                fNameBill.setText(bill.getfNameBill());
                lNameBill.setText(bill.getlNameBill());
                addressBill.setText(bill.getAddressBill());
                cityBill.setText(bill.getCityBill());
                stateBill.setSelectedItem(bill.getStateBill());
                zipBill.setText(bill.getZipBill());
      

                fNameShip.setText(ship.getfNameShip());
                lNameShip.setText(ship.getlNameShip());
                addressShip.setText(ship.getAddressShip());
                cityShip.setText(ship.getCityShip());
                stateShip.setSelectedItem(ship.getStateShip());
                zipShip.setText(ship.getZipShip());


                creditNum2.setText("Credit Password");
               

                item.setSelectedItem(order.getItem());
                quantity1.setText(order.getQuantiy());
                total1.setText(order.getTotal());
                price1.setText(order.getPrice());
                
                isEdit = true;

         
    }//GEN-LAST:event_editTable

    private void CancelChanges(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelChanges
       //After the user selects submit, we clear all fields
                fNameBill.setText(null);
                lNameBill.setText(null);
                addressBill.setText(null);
                cityBill.setText(null);
                stateBill.setSelectedItem("AL");
                zipBill.setText(null);

                fNameShip.setText(null);
                lNameShip.setText(null);
                addressShip.setText(null);
                cityShip.setText(null);
                stateShip.setSelectedItem("AL");
                zipShip.setText(null);

                creditNum2.setText(null);
               

                item.setSelectedItem("Computer Science 101");
                quantity1.setText(null);
                total1.setText(null);
                price1.setText(null);

                buttonGroup1.clearSelection();
    }//GEN-LAST:event_CancelChanges

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new OrderFrame().setVisible(true);
            }
        });
        
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressBill;
    private javax.swing.JTextField addressShip;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField cityBill;
    private javax.swing.JTextField cityShip;
    private javax.swing.JTextArea comments1;
    private javax.swing.JRadioButton credit1;
    private javax.swing.JPasswordField creditNum1;
    private javax.swing.JPasswordField creditNum2;
    private javax.swing.JRadioButton debit1;
    private javax.swing.JButton editButton;
    private javax.swing.JTextField fNameBill;
    private javax.swing.JTextField fNameShip;
    private javax.swing.JComboBox item;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lNameBill;
    private javax.swing.JTextField lNameShip;
    private javax.swing.JButton newButton;
    private javax.swing.JRadioButton payPal1;
    private javax.swing.JTextField price1;
    private javax.swing.JTextField quantity1;
    private javax.swing.JCheckBox shipping;
    private javax.swing.JComboBox stateBill;
    private javax.swing.JComboBox stateShip;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField total1;
    private javax.swing.JTextField zipBill;
    private javax.swing.JTextField zipShip;
    // End of variables declaration//GEN-END:variables
}
